### Perpetual Contract Basics

Perpetual contracts are a type of futures contract, pioneered in the cryptocurrency space by Bitmex. Perpetual contracts are amongst the most popular derivative products in the space.

Perpetual contracts allow traders to speculate on the future price of a given asset by buying (going long) or selling (going short) perpetual futures contracts. Unlike typical futures contracts, perpetuals do not expire and instead remain effective until the trader closes their position.

The price of perpetual contracts will often diverge from the broader market (aka spot market). These deviations signal sentiment on the exchange - if a majority of traders expect the underlying asset price to increase over time, the perpetual contract price will likely exceed the spot price, but if most traders expect the price to fall, the perpetual contract price will drop below the spot price.

There are _two mechanisms_ that moderate this process, and they function to keep the perpetual contract price close to the spot price:

## 1) Funding payments

Every hour, traders with open long or short positions pay each other a funding payment according to market conditions, as follows:
- if the contract price is above the spot price, longs pay shorts, whereas,
- if the contract price is below the spot price, shorts pay longs

The size of the funding payment is a function of the difference between the contract price and the spot price, as well as user's position size. This incentivizes traders to take the unpopular side of the market.

## 2) Arbitrage

If the contract price diverges significantly from the spot price in other exchanges, arbitrageurs can benefit in _two ways_:
1. if they hold a position elsewhere, they can use _XXXXX_ Protocol to take the inverse position and earn funding payments
2. if they buy or sell an asset elsewhere, they can long or short that asset using _XXXXX_ Protocol in the expectation that the price will tend to move back toward the spot price

## Oracle API

_XXXXX_ protocol requires an index/spot price feed for the underlying asset from an oracle, provided by _YYYY_.

_XXXXX_ will connect to _YYYY_ data beacons, which are atomic data feeds powered by a singular first-party oracle. Beacons are used as inputs for the logarithmic options pricing model calculations. In partnering with _YYYY_, _XXXXX_ can scale its data categories and pairs while having the data feeds covered in the event of any problem or manipulation, as is currently prevalent in the data oracle space. _YYYY_ has a well-reserved coverage pool for valid claims.

_YYYY_ is a critical Web3 building block known for its reliable and reputable data feeds. Diverse data sets are needed to attract users, thereby increasing the total value locked as well as fee revenue from the opening and closing of trading positions.

## vAMM

Our exchange model differs significantly from other exchanges, including AMM-based exchanges.

**Key points:**
- *XXXXX* Protocol does not use liquidity or liquidity providers
- *XXXXX* Protocol is 100% AMM-based; there is no Order Book
- The on-chain price reflects trades on *XXXXX* Protocol - the price only moves when positions are opened or closed
- *XXXXX* tracks the log2 of the underlying asset's price as our mark price, i.e., mark price = log2 (index price)

The log vAMM acts as an independent cash-settlement market. Hence, for the log vAMM mark price to approach an underlying index, _XXXXX_ Protocol needs to add a funding rate similar to those used in perpetual contracts on central limit order book exchanges.

Traders use collateral (USDC) to open long or short positions in a given asset. Every time they make a trade, the vAMM calculates the entry or exit price in the same way Uniswap or other AMM-style exchanges calculate prices. 

An important difference with the vAMM is that no swap occurs. Unlike Uniswap where, for example, traders start with "Asset A" and leave with "Asset B", traders on _XXXXX_ Protocol, always start with USDC and leave with USDC. This allows the protocol to operate without ever needing to hold the underlying asset.
